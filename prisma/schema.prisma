// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String
  email         String          @unique
  password      String
  isActive      Boolean         @default(true)
  isAdmin       Boolean         @default(false)
  createdAt     DateTime?       @default(now())
  updatedAt     DateTime?       @updatedAt
  phisicalState PhisicalState[]
  entryandExit  EntryAndExit[]
  payments      Payment[]
}

model PhisicalState {
  id            String   @id @default(cuid())
  currentState  String
  createdAt     DateTime @default(now())
  previousState String
  updatedAt     DateTime @updatedAt
  userId        String
  user          User     @relation(fields: [userId], references: [id])
}

model EntryAndExit {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model Payment {
  id            String   @id @default(cuid())
  payment       Float
  paymentMethod String
  createdAt     DateTime @default(now())
  userId        String
  user          User     @relation(fields: [userId], references: [id])
}
